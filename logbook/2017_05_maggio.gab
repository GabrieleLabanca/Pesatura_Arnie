170505

[X] Il circuito finalmente funziona: con Roberto il 3 ci siamo trovati per saldare tutto e ora e' decente.
Presi dati a 0.1 secondo: si nota shift verso l'alto di qualche 0.1


170524

Due prese dati: 
_ piu' di 24h di background, dt=100s
_ aggiunta-rimozione di pesi da 2kg, dt=1s
Il comportamento e' ottimo: si procede con una  \\prima taratura\\: 
    con "Serial.print(scale.get_units()*0.1 , 1);" a 4kg corrisponde 68.7
messo il numero di scala u  = .0058224 e funziona

\\Aggiungo cifre decimali\\: non piu' di 3 perche' non avrebbe senso, data la precisione di 0.1 desiderata; ma voglio vedere quanto e' stabile
Prima nota: i due pesi forse non sono esattamente 2+2kg: uso una bilancia elettronica per controllare: sono in realta' 3870g
=> \\ritaro\\ con u=.005600966442953021 (v*4.023=3.870; X*u_old*0.1=4.023)
Ora e' //preciso alla 2a cifra decimale!// quindi e' stata una buona scelta tenere la terza, ma non serve la quarta

Ora mi rendo conto che serve una misura di background di lunga durata con questa taratura! A questo punto avrebbe senso farla a vuoto e con un peso sopra, cosi' in una botta sola mi rendo conto se l'imprecisione cambia con lo stress delle celle.


170527

Finita la \\presa dati da 60 ore\\. La linea e' quasi piatta, sulla scala dei kg. In ogni caso, anche quando ci sono le oscillazioni piu' grandi e sistematiche, //su un periodo di due ore l'errore non sale sopra l'ordine dei 10g//.
Si vede piuttosto chiaramente che l'andamento del background e' somma di due andamenti: uno di rumore, casuale; l'altro sistematico, con una forma abbastanza riconoscibile.
Un fit effettuato con Root rende evidente che l'andamento e' //parabolico a tratti//, con un chi2 ridicolo (10^-6).

L'obiettivo diventa ora automatizzare un programma che riconosca queste strutture paraboliche a tratti, le sottragga al background totale e tiri fuori (sperabilmente) un rumore del tutto casuale.

NB: quando il peso aumentera', bisogna vedere con che velocita' lo fara', cioe' quanto influira' sul moto parabolico!

Ho trasformato in object-oriented il file plot.cxx, che ora diventa machine.cxx: funzione plot_file pronta


170531

Lavoro a machine.cxx
Funzione per ottenere la media.

Progetto per il fit_in_progress:
\\procedura transizione fit\\
tre iteratori: start, border, explorer
partono insieme. Explorer va avanti e misura la deviazione dal fit atteso. Quando e' buona, casuale, border lo segue; altrimenti si segna lo start-border per il primo fit, dopodiche' start va dov'e' border, explorer torna a start e si ricomincia
\\procedura creazione fit\\
explorer e border vanno avanti di 10
